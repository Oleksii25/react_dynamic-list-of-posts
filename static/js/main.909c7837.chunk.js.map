{"version":3,"sources":["api/api.js","api/posts.js","components/PostsList/PostsList.jsx","api/comments.js","components/NewCommentForm/NewCommentForm.jsx","components/Loader/Loader.jsx","components/PostDetails/PostDetails.jsx","App.jsx","index.js"],"names":["BASE_URL","getUserPosts","userId","a","fetch","response","json","allPosts","data","filter","post","console","error","getPostDetails","postId","then","catch","PostsList","posts","changePost","useState","currentPostId","setCurrentPostId","changeSelectedPost","id","className","map","key","title","onClick","type","getPostComments","comments","comment","removeComment","method","addComment","body","JSON","stringify","NewCommentForm","loadComments","clearComments","name","setName","email","setEmail","setBody","createComment","event","preventDefault","newComment","clearForm","onSubmit","required","value","placeholder","onChange","target","Loader","PostDetails","setComments","isCommentsVisible","setCommentVisibilitty","getComments","deleteComment","useEffect","length","prevState","App","selectedUser","setSelectedUser","setPosts","selectedPost","setSelectedPost","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.909c7837.chunk.js","sourcesContent":["export const BASE_URL = 'https://mate-api.herokuapp.com';\n","import { BASE_URL } from './api';\n\nexport async function getUserPosts(userId) {\n  try {\n    const response = await fetch(`${BASE_URL}/posts/`);\n    const allPosts = await response.json();\n\n    return allPosts.data.filter(post => !+userId || post.userId === +userId);\n  } catch (error) {\n    // eslint-disable-next-line\n    console.error(error);\n\n    return error;\n  }\n}\n\nexport async function getPostDetails(postId) {\n  return fetch(`${BASE_URL}/posts/${postId}`)\n    .then(response => response.json())\n    .then(response => response.data)\n    .catch(\n      // eslint-disable-next-line\n      error => console.error(error)\n    );\n}\n","import React,{ useState } from 'react';\nimport { getPostDetails } from '../../api/posts';\nimport './PostsList.scss';\n\nexport const PostsList = ({ posts, changePost }) => {\n  const [currentPostId, setCurrentPostId] = useState(0);\n\n  const changeSelectedPost = async (id) => {\n    const post = await getPostDetails(id);\n\n    changePost(post);\n    setCurrentPostId(id);\n  }\n\n  return (\n    <div className=\"PostsList\">\n      <h2>Posts:</h2>\n  \n      <ul className=\"PostsList__list\">\n        {posts.map(post => (\n          <li\n            className=\"PostsList__item\"\n            key={post.id}\n          >\n            <div>\n              <b>[User #{post.userId}]: </b>\n              {post.title}\n            </div>\n            <button\n              onClick={\n                currentPostId === post.id\n                  ? () => changeSelectedPost(0)\n                  : () => changeSelectedPost(post.id)\n              }\n              type=\"button\"\n              className=\"PostsList__button button\"\n            >\n              {currentPostId === post.id ? 'Close' : 'Open'}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  )\n}\n","import { BASE_URL } from './api';\n\nexport async function getPostComments(postId) {\n  return fetch(`${BASE_URL}/comments`)\n    .then(response => response.json())\n    .then(response => response.data)\n    .then(comments => comments.filter(comment => comment.postId === postId))\n    .catch(\n      // eslint-disable-next-line\n      error => console.error(error)\n    );\n}\n\nexport async function removeComment(id) {\n  await fetch(`${BASE_URL}/comments/${id}`, { method: 'DELETE' });\n}\n\nexport async function addComment(comment) {\n  await fetch(`${BASE_URL}/comments`, {\n    method: 'POST',\n    body: JSON.stringify(comment),\n  });\n}\n","import React, { useState } from 'react';\nimport { addComment } from '../../api/comments';\nimport './NewCommentForm.scss';\n\nexport const NewCommentForm = ({ postId, loadComments, clearComments }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [body, setBody] = useState('');\n\n  const createComment = async (event) => {\n    event.preventDefault();\n\n    const newComment = {\n      postId,\n      name,\n      email,\n      body,\n    }\n\n    await addComment(newComment);\n      clearComments(null);\n      loadComments();\n      clearForm();\n    }\n\n  const clearForm = () => {\n    setBody('');\n    setEmail('');\n    setName('');\n  }\n\n  return (\n    <form\n      className=\"NewCommentForm\"\n      onSubmit={createComment}\n    >\n      <div className=\"form-field\">\n        <input\n          required\n          value={name}\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          onChange={({ target }) => setName(target.value)}\n        />\n      </div>\n  \n      <div className=\"form-field\">\n        <input\n          required\n          value={email}\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          onChange={({ target }) => setEmail(target.value)}\n        />\n      </div>\n  \n      <div className=\"form-field\">\n        <textarea\n          required\n          value={body}\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          onChange={({ target }) => setBody(target.value)}\n        />\n      </div>\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n}\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useState, useEffect }from 'react';\nimport { NewCommentForm } from '../NewCommentForm';\nimport { Loader } from '../Loader';\nimport { getPostComments, removeComment } from '../../api/comments';\nimport './PostDetails.scss';\n\nexport const PostDetails = ({ post }) => {\n  const [comments, setComments] = useState(null);\n  const [isCommentsVisible, setCommentVisibilitty] = useState(true);\n  const changeCommentsVisibility = () => {\n    setCommentVisibilitty(prevState => !prevState)\n  }\n\n  const getComments = () => {\n    (async() => setComments(await getPostComments(post.id)))()\n  }\n\n  const deleteComment = async(id) => {\n    setComments(null);\n    await removeComment(id);\n    getComments();\n  }\n\n  useEffect(() => {\n    setComments(null);\n    (async() => setComments(await getPostComments(post.id)))()\n  },[post])\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n  \n      <section className=\"PostDetails__post\">\n        <p>{post.body}</p>\n      </section>\n  \n      {!comments\n        ? <Loader />\n        : <section className=\"PostDetails__comments\">\n          {\n          !!comments.length\n            && <button\n              type=\"button\"\n              className=\"button\"\n              onClick={changeCommentsVisibility}\n            >\n              {\n                isCommentsVisible\n                  ? `Hide ${comments.length} comments`\n                  : `Show ${comments.length} comments`\n              }\n            </button>\n          }\n          {isCommentsVisible\n            && <ul className=\"PostDetails__list\">\n            {comments.map(comment => (\n              <li\n                className=\"PostDetails__list-item\"\n                key={comment.id}\n              >\n                <button\n                  type=\"button\"\n                  className=\"PostDetails__remove-button button\"\n                  onClick={() => deleteComment(comment.id)}\n                >\n                  X\n                </button>\n                <p>{comment.body}</p>\n              </li>\n              ))}\n            </ul>\n          }\n        </section>\n      }\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm\n            postId={post.id}\n            loadComments={getComments}\n            clearComments={setComments}\n          />\n        </div>\n      </section>\n    </div>\n  );\n}\n\n","import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { Loader } from './components/Loader';\nimport { getUserPosts } from './api/posts';\n\nconst App = () => {\n  const [selectedUser, setSelectedUser] = useState(0);\n  const [posts, setPosts] = useState([]);\n  const [selectedPost, setSelectedPost] = useState(null);\n\n  useEffect(() => {\n    (async() => setPosts(await getUserPosts(selectedUser)))()\n  },[selectedUser])\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n  \n          <select\n            className=\"App__user-selector\"\n            onChange={({ target }) => setSelectedUser(target.value)}\n          >\n            <option value=\"0\">All users</option>\n            <option value=\"1\">Leanne Graham</option>\n            <option value=\"2\">Ervin Howell</option>\n            <option value=\"3\">Clementine Bauch</option>\n            <option value=\"4\">Patricia Lebsack</option>\n            <option value=\"5\">Chelsey Dietrich</option>\n            <option value=\"6\">Mrs. Dennis Schulist</option>\n            <option value=\"7\">Kurtis Weissnat</option>\n            <option value=\"8\">Nicholas Runolfsdottir V</option>\n            <option value=\"9\">Glenna Reichert</option>\n            <option value=\"10\">Leanne Graham</option>\n          </select>\n        </label>\n      </header>\n  \n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          {\n            posts.length\n              ? <PostsList \n                posts={posts}\n                changePost={setSelectedPost}\n              />\n              : <Loader />\n          }\n        </div>\n        {!!selectedPost\n          && <div className=\"App__content\">\n            <PostDetails\n              post={selectedPost}\n            />\n        </div>}\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}